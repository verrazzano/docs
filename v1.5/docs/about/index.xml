<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Verrazzano Enterprise Container Platform â€“ About</title>
    <link>/docs/about/</link>
    <description>Recent content in About on Verrazzano Enterprise Container Platform</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/docs/about/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Verrazzano Features</title>
      <link>/docs/about/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/about/features/</guid>
      <description>
        
        
        &lt;p&gt;The Verrazzano Enterprise Container Platform delivers a unified platform for standardizing application and cluster management across various hosting environments. It&amp;rsquo;s built from many familiar open source projects, each working in concert on Kubernetes clusters to provide vital container management services.&lt;/p&gt;
&lt;p&gt;Getting started with Verrazzano is easy - the basic installation process is simple yet flexible enough to evolve with your requirements.&lt;/p&gt;
&lt;h2 id=&#34;unified-hosting-environment-for-all-application-types&#34;&gt;Unified hosting environment for all application types&lt;/h2&gt;
&lt;p&gt;The flexibility of Verrazzano ensures that you can deploy both cloud native and traditional applications in on-premises and multicloud environments and manage them all using the same components. Using a consistent set of tools and processes reduces overhead related to training and maintenance, leaving more development resources available to address your business needs.&lt;/p&gt;
&lt;p&gt;Verrazzano can even accelerate your approach to modernizing your traditional applications. While cloud native technologies offer many advantages, the labor requirements necessary to convert your existing applications can be intimidating. Verrazzano presents a bridge between the two: developers can immediately start building new applications cloud natively, while simultaneously maintaining and converting their existing traditional applications on a timeline that makes sense, all within the same platform.&lt;/p&gt;
&lt;h2 id=&#34;complete-application-life-cycle-management&#34;&gt;Complete application life cycle management&lt;/h2&gt;
&lt;p&gt;Starting with deployment, Verrazzano supports an application through all phases of its life cycle. It extensively automates the deployment process so you can reproduce successful application deployments reliably, even in multicloud environments.&lt;/p&gt;
&lt;p&gt;Verrazzano understands that application management is a continuous and dynamic process where deployment is just the beginning. As an application moves through its life cycle, its management system must be able to adapt to its developing needs. Day 2 operations are given equal consideration so that post-deployment, you can continue to optimize your applications and their clusters over the course of their lifetime.&lt;/p&gt;
&lt;p&gt;With management occurring within a single platform, Verrazzano makes it easy to follow the principles of DevOps and GitOps. Coordination between diverse types of users becomes effortless, encouraging quick resolutions and creative innovations.&lt;/p&gt;
&lt;p&gt;For a list of the components that make up Verrazzano and what they do, see &lt;a href=&#34;../../docs/setup/prereqs/#installed-components&#34;&gt;Installed Components&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;dependable-infrastructure-management&#34;&gt;Dependable infrastructure management&lt;/h2&gt;
&lt;p&gt;Verrazzano also recognizes that the direct management of applications is only part of what makes up a useful container management platform: to consistently provide a stable and reliable service, you need to start with a healthy foundation. The infrastructure supporting your applications must be equally well supported.&lt;/p&gt;
&lt;p&gt;Verrazzano tracks and receives valuable and timely information on the state of your clusters to ensure they&amp;rsquo;re operating optimally.&lt;/p&gt;
&lt;p&gt;Verrazzano also supports both single and multicluster Kubernertes environments.&lt;/p&gt;
&lt;p&gt;For more information on how Verrazzano works in a multicluster environment, see &lt;a href=&#34;../../docs/applications/multicluster/&#34;&gt;Multicluster&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;comprehensive-observability&#34;&gt;Comprehensive observability&lt;/h2&gt;
&lt;p&gt;Verrazzano includes a variety of logging, monitoring, and tracing components so you can make intelligent decisions based on the comprehensive data generated by your application and its environment. Many of the components in this observability stack offer significant automated functionality which means Verrazzano alerts you to problems before you know to look for them.&lt;/p&gt;
&lt;p&gt;For more information on the available observability options, see &lt;a href=&#34;../../docs/observability/&#34;&gt;Logging and Monitoring&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;integrated-security&#34;&gt;Integrated security&lt;/h2&gt;
&lt;p&gt;Verrazzano protects your applications and other resources with a robust set of security-focused components. It takes advantage of Kubernetes Role-Based Access Control to authorize only the right users to the right resources. Verrazzano also incorporates an identity solution that&amp;rsquo;s easily integrated with OAuth and LDAP systems so you can streamline user management and implement Single Sign On services, protecting Verrazzano components and your applications.&lt;/p&gt;
&lt;p&gt;Furthermore, a single and cohesive platform can reduce potential security gaps that often arise when working across unrelated software components. Verrazzano seals potential breaches between its individual components to minimize any compatibility issues and ensure each component remains on a supported and secure version.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Verrazzano and the Open Application Model</title>
      <link>/docs/about/verrazzanooam/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/about/verrazzanooam/</guid>
      <description>
        
        
        &lt;p&gt;Open Application Model (OAM) is a runtime-agnostic specification for defining cloud native applications; it allows developers to focus on the application instead of the complexities of a particular runtime infrastructure.  OAM provides the &lt;a href=&#34;https://github.com/oam-dev/spec&#34;&gt;specification&lt;/a&gt; for several file formats and rules for a runtime to interpret.  Verrazzano uses OAM to enable the definition of a composite application abstraction and makes OAM constructs available within a &lt;code&gt;VerrazzanoApplication&lt;/code&gt; YAML file.  Verrazzano provides the flexibility to combine what you want into a multicloud enablement. It uses the &lt;code&gt;VerrazzanoApplication&lt;/code&gt; as a means to encapsulate a set of components, scopes, and traits, and deploy them on a selected cluster.&lt;/p&gt;
&lt;p&gt;OAM&amp;rsquo;s workload concept makes it easy to use many different workload types.  Verrazzano includes specific workload types with special handling to deploy and manage those types, such as WebLogic, Coherence, and Helidon.  OAM&amp;rsquo;s flexibility lets you create a grouping that is managed as a unit, although each component can be scaled or updated independently.&lt;/p&gt;
&lt;h2 id=&#34;how-does-oam-work&#34;&gt;How does OAM work?&lt;/h2&gt;
&lt;p&gt;OAM has five core concepts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Workloads - Declarations of the kinds of resources supported by the platform and the OpenAPI schema for that resource.  Most Kubernetes CRDs can be exposed as workloads.  Standard Kubernetes resource types can also be used
(for example, Deployment, Service, Pod, ConfigMap).&lt;/li&gt;
&lt;li&gt;Components - Wrap a workload resource&amp;rsquo;s specification data within OAM specific metadata.&lt;/li&gt;
&lt;li&gt;Application Configurations - Describe a collection of components that comprise an application.  This is also where customization (such as, environmental) of each component is done.  Customization is achieved using scopes and traits.&lt;/li&gt;
&lt;li&gt;Scopes - Apply customization to several components.&lt;/li&gt;
&lt;li&gt;Traits - Apply customization to a single component.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;../../docs/about/oam-app.svg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Verrazzano in a Multicluster Environment</title>
      <link>/docs/about/verrazzanomulticluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/about/verrazzanomulticluster/</guid>
      <description>
        
        
        &lt;p&gt;Review the following key concepts to understand multicluster Verrazzano.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Admin cluster - A Kubernetes cluster that serves as the central management point for deploying and monitoring applications
in managed clusters.&lt;/li&gt;
&lt;li&gt;Managed clusters - A Kubernetes cluster that has the following characteristics:
&lt;ul&gt;
&lt;li&gt;It is registered with an admin cluster with a unique name.&lt;/li&gt;
&lt;li&gt;Verrazzano multicluster applications may be deployed to the managed cluster from the admin cluster.&lt;/li&gt;
&lt;li&gt;Logs and metrics for Verrazzano system components and Verrazzano multicluster applications deployed on the
managed cluster are viewable from the admin cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Verrazzano multicluster resources - Custom Kubernetes resources defined by Verrazzano.
&lt;ul&gt;
&lt;li&gt;Each multicluster resource serves as a wrapper for an underlying resource type.&lt;/li&gt;
&lt;li&gt;A multicluster resource allows the &lt;code&gt;placement&lt;/code&gt; of the underlying resource to be specified as a list of
names of the clusters in which the resource must be placed.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more details, see &lt;a href=&#34;../../docs/applications/multicluster/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../docs/images/multicluster/MCIntro.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Verrazzano Projects</title>
      <link>/docs/about/verrazzanoproject/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/docs/about/verrazzanoproject/</guid>
      <description>
        
        
        &lt;p&gt;A Verrazzano project provides a way to group application namespaces that are owned or administered by the same user or
group of users. When creating a project, you can specify the &lt;em&gt;subjects:&lt;/em&gt; users, groups, or service accounts, that are
to be granted access to the namespaces governed by the project. Two types of subjects may be specified:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Project admins, who have both read and write access to the project&amp;rsquo;s namespaces.&lt;/li&gt;
&lt;li&gt;Project monitors, who have read-only access to the project&amp;rsquo;s namespaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;the-verrazzanoproject-resource&#34;&gt;The VerrazzanoProject resource&lt;/h3&gt;
&lt;p&gt;A VerrazzanoProject &lt;a href=&#34;../../docs/reference/vao-clusters-v1alpha1/#clusters.verrazzano.io/v1alpha1.VerrazzanoProject&#34;&gt;resource&lt;/a&gt; is created by
a Verrazzano admin user, and specifies the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A list of namespaces that the project governs.&lt;/li&gt;
&lt;li&gt;One or more users, groups, or service accounts that will be granted the &lt;code&gt;verrazzano-project-admin&lt;/code&gt; role for the
VerrazzanoProject. Project admins may deploy or delete applications and related resources in the namespaces
in the project.&lt;/li&gt;
&lt;li&gt;One or more users, groups, or service accounts that will be granted the &lt;code&gt;verrazzano-project-monitor&lt;/code&gt; role for the
VerrazzanoProject. Project monitors may view the resources in the namespaces in the project, but not modify
or delete them.&lt;/li&gt;
&lt;li&gt;A list of network policies to apply to the namespaces in the project.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The creation of a VerrazzanoProject results in:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The creation of the specified namespaces in the project, if those do not already exist.&lt;/li&gt;
&lt;li&gt;The creation of a Kubernetes RoleBindings in each of the namespaces, to set up the appropriate
permissions for the project admins and project monitors of the project.&lt;/li&gt;
&lt;li&gt;The creation of the specified network policies for each of the namespaces.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
